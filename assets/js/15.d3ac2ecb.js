(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{707:function(v,_,t){v.exports=t.p+"assets/img/img.7d85fd9e.png"},754:function(v,_,t){"use strict";t.r(_);var s=t(5),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("说明")]),v._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[v._v("\tVim 使用\n")])])])]),v._v(" "),s("p",[v._v("[TOC]")]),v._v(" "),s("h2",{attrs:{id:"_1-什么是-vim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-vim"}},[v._v("#")]),v._v(" 1. 什么是 Vim ？")]),v._v(" "),s("p",[v._v("Vim 是 Bram Moolenaar 写的开源编辑器，并在 1991 年发布于Unix 平台。是 Linux 操作系统中最常用的编辑器之一。它的前身是 Vi 编辑器，可以说 Vim(Vi IMproved) 是 Vi 的加强版。Vim 继承了 Vi 编辑器大多数的特性，并在此基础上扩展了许多更加强大的功能，因此目前大多数类 Unix 平台上已经默认安装 Vim 编辑器。")]),v._v(" "),s("h2",{attrs:{id:"_2-vim-的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vim-的特性"}},[v._v("#")]),v._v(" 2. Vim 的特性")]),v._v(" "),s("p",[v._v("Vim 作为当下最流行的编辑器之一，它有以下特点：")]),v._v(" "),s("ul",[s("li",[v._v("内存占用低；")]),v._v(" "),s("li",[v._v("“模式” 编辑器；")]),v._v(" "),s("li",[v._v("可配置性强：按需配置相应功能，可以保存在 vimrc 中；")]),v._v(" "),s("li",[v._v("插件扩展：可以通过不同插件来扩展Vim的功能，既可以保证 Vim 强大，还能保证 Vim 简洁；")]),v._v(" "),s("li",[v._v("支持多窗口；")]),v._v(" "),s("li",[v._v("支持多标签；")]),v._v(" "),s("li",[v._v("支持宏。")])]),v._v(" "),s("h2",{attrs:{id:"_3-vim-的版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-vim-的版本"}},[v._v("#")]),v._v(" 3. Vim 的版本")]),v._v(" "),s("p",[v._v("自 1991 年 11 月 2 日 Vim 1.14 版本首次发布至今，Vim 一共经历了一下几个重要的版本迭代：")]),v._v(" "),s("ul",[s("li",[v._v("1991 年 11 月 2 日，Vim 1.14：首次发布（Fred Fish disk #591）；")]),v._v(" "),s("li",[v._v("1992 年，Vim 1.22 开始移植到 Unix平台。至此 Vim 开始与 Vi 并驾齐驱；")]),v._v(" "),s("li",[v._v("1994 年 8 月 12 日，Vim 3.0 支持多个缓冲区和窗口；")]),v._v(" "),s("li",[v._v("1996 年 5 月 29 日，Vim 4.0 支持图形用户界面（主要由Robert Webb提供）；")]),v._v(" "),s("li",[v._v("1998 年 2 月 19 日，Vim 5.0 支持语法着色/高亮显示；")]),v._v(" "),s("li",[v._v("2001 年 9 月 26 日，Vim 6.0 支持折叠，插件，垂直分割；")]),v._v(" "),s("li",[v._v("2006 年 5 月 8 日，Vim 7.0 支持拼写检查，自动补齐，撤消分支，标签；")]),v._v(" "),s("li",[v._v("2016 年 9 月 12 日，Vim 8.0支持新增作业，异步I / O，本机包等等特性。")])]),v._v(" "),s("h2",{attrs:{id:"_4-为什么使用-vim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么使用-vim"}},[v._v("#")]),v._v(" 4. 为什么使用 Vim？")]),v._v(" "),s("p",[v._v("Linux 平台上有很多的开源编辑器，出了 Vim 之外，比较流行的还有像 Nano，Emacs等等老牌编辑器。这些主流编辑器中尤其是 Vim 和 Emacs 是程序猿们争论最多的两种编辑器。")]),v._v(" "),s("h2",{attrs:{id:"_5-vim-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vim-安装"}},[v._v("#")]),v._v(" 5. Vim 安装")]),v._v(" "),s("h4",{attrs:{id:"_5-1centos-下安装-vim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1centos-下安装-vim"}},[v._v("#")]),v._v(" 5.1\tCentOS 下安装 Vim")]),v._v(" "),s("p",[v._v("CentOS 下安装 Vim 直接运行 "),s("code",[v._v("yun install vim")])]),v._v(" "),s("h4",{attrs:{id:"_5-2-windows-下安装-vim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-windows-下安装-vim"}},[v._v("#")]),v._v(" 5.2   Windows 下安装 Vim")]),v._v(" "),s("p",[v._v("通过官网下载 "),s("a",{attrs:{href:"https://www.vim.org/download.php",target:"_blank",rel:"noopener noreferrer"}},[v._v("vim 官网"),s("OutboundLink")],1),v._v("。下载官方包后，点击安装即可。")]),v._v(" "),s("ol",[s("li",[s("p",[v._v("打开下载页面后可以看到 Windows 安装版本的 Vim 安装包下载链接，点击下载 "),s("strong",[v._v("gvim_8.2.0012_x86_signed.exe")])])]),v._v(" "),s("li",[s("p",[v._v("点击安装安装包，根据向导安装（下一步）")])]),v._v(" "),s("li",[s("p",[v._v("安装完成后打开可以看到如下界面")])])]),v._v(" "),s("h2",{attrs:{id:"_6-vim-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-vim-操作"}},[v._v("#")]),v._v(" 6. Vim 操作")]),v._v(" "),s("h5",{attrs:{id:"_1-打开文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-打开文件"}},[v._v("#")]),v._v(" 1. 打开文件")]),v._v(" "),s("p",[v._v("打开 "),s("code",[v._v("dd.md")]),v._v(" 文件，直接运行下面命令将可以打开 Vim 编辑文件")]),v._v(" "),s("div",{staticClass:"language-cmake line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[v._v("[hou@"),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("192")]),v._v(" /]$ vim dd.md \n"),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("12312312312312")]),v._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("12312312312312")]),v._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[v._v("12312312312312")]),v._v("\n\n")])]),v._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[v._v("1")]),s("br"),s("span",{staticClass:"line-number"},[v._v("2")]),s("br"),s("span",{staticClass:"line-number"},[v._v("3")]),s("br"),s("span",{staticClass:"line-number"},[v._v("4")]),s("br"),s("span",{staticClass:"line-number"},[v._v("5")]),s("br")])]),s("h5",{attrs:{id:"_2-在-dd-md-内打开其他文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-在-dd-md-内打开其他文件"}},[v._v("#")]),v._v(" 2.  在 "),s("code",[v._v("dd.md")]),v._v(" 内打开其他文件")]),v._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[v._v("/")]),v._v("dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("txt\n")])]),v._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[v._v("1")]),s("br")])]),s("h5",{attrs:{id:"_3-vim-定制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-vim-定制"}},[v._v("#")]),v._v(" 3.  Vim 定制")]),v._v(" "),s("p",[v._v("Vim 通过以下两种方式来进行定制 Vim 的功能和配置:")]),v._v(" "),s("ul",[s("li",[v._v("通过 set 命令配置开关")]),v._v(" "),s("li",[v._v("通过在 vimrc 文件中写入配置来加载。")])]),v._v(" "),s("h6",{attrs:{id:"_1-使用-set-命令配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用-set-命令配置"}},[v._v("#")]),v._v(" 1. 使用 set 命令配置")]),v._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v("set number\n")])]),v._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[v._v("1")]),s("br")])]),s("p",[s("strong",[v._v("语法高亮")]),v._v(":"),s("code",[v._v("syntax enable/off")])]),v._v(" "),s("p",[s("strong",[v._v("背景颜色")]),v._v(":"),s("code",[v._v(":colorscheme darkblue")])]),v._v(" "),s("p",[v._v("上面是几个 Vim 的简单配置，配置之后会大大的方便我们的开发。同样的 Vim 当然也不止这些配置，其他 Vim 更加强大的配置在后面会一一讲到。")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("指令")]),v._v(" "),s("th",[v._v("含义")]),v._v(" "),s("th",[v._v("备注")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("set number")]),v._v(" "),s("td",[v._v("显示行号")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set hlsearch")]),v._v(" "),s("td",[v._v("高亮搜索")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set incsearch")]),v._v(" "),s("td",[v._v("增量实时搜索")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set ignorecase")]),v._v(" "),s("td",[v._v("大小写忽略")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set autoindent")]),v._v(" "),s("td",[v._v("自动缩进")]),v._v(" "),s("td",[v._v("在这种缩进形式中，新增加的行和前一行使用相同的缩进形式")])]),v._v(" "),s("tr",[s("td",[v._v("set smartindent")]),v._v(" "),s("td",[v._v("自动缩进")]),v._v(" "),s("td",[v._v("在这种缩进模式中，每一行都和前一行有相同的缩进量")])]),v._v(" "),s("tr",[s("td",[v._v("set softtabstop")]),v._v(" "),s("td",[v._v("tab键实际占有的列数")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set expandtab")]),v._v(" "),s("td",[v._v("tab 转化为空格")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set shiftwidth=4")]),v._v(" "),s("td",[v._v("换行缩进为4个空格")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("set tabstop=4")]),v._v(" "),s("td",[v._v("设置tab 为4个空格")]),v._v(" "),s("td")])])]),v._v(" "),s("h2",{attrs:{id:"_7-vim-的模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-vim-的模式"}},[v._v("#")]),v._v(" 7. Vim 的模式")]),v._v(" "),s("blockquote",[s("p",[v._v("Vim 一共有四种常用模式：")]),v._v(" "),s("ul",[s("li",[v._v("普通模式")]),v._v(" "),s("li",[v._v("插入模式")]),v._v(" "),s("li",[v._v("命令行模式")]),v._v(" "),s("li",[v._v("可视化模式")])])]),v._v(" "),s("h4",{attrs:{id:"_1-普通模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-普通模式"}},[v._v("#")]),v._v(" 1. 普通模式")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("键名")]),v._v(" "),s("th",[v._v("作用")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("h")]),v._v(" "),s("td",[v._v("光标左移")])]),v._v(" "),s("tr",[s("td",[v._v("j")]),v._v(" "),s("td",[v._v("光标下移")])]),v._v(" "),s("tr",[s("td",[v._v("k")]),v._v(" "),s("td",[v._v("光标上移")])]),v._v(" "),s("tr",[s("td",[v._v("l")]),v._v(" "),s("td",[v._v("光标右移")])])])]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("组合键")]),v._v(" "),s("th",[v._v("作用")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("2+j")]),v._v(" "),s("td",[v._v("向下移动两行")])]),v._v(" "),s("tr",[s("td",[v._v("5+h")]),v._v(" "),s("td",[v._v("向左移动五个字符=")])])])]),v._v(" "),s("p",[v._v("除了上面的方向法，还有针对更加丰富粒度的词组法：")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("键名")]),v._v(" "),s("th",[v._v("作用")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("w")]),v._v(" "),s("td",[v._v("移动到下一个单词词首")])]),v._v(" "),s("tr",[s("td",[v._v("b")]),v._v(" "),s("td",[v._v("移动到上一个单词词首")])]),v._v(" "),s("tr",[s("td",[v._v("e")]),v._v(" "),s("td",[v._v("移动到当前单词词尾")])])])]),v._v(" "),s("h4",{attrs:{id:"插入模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入模式"}},[v._v("#")]),v._v(" 插入模式")]),v._v(" "),s("p",[v._v("插入模式是最容易理解的模式，就是和我们平时使用的编辑器一样就是为了插入字符的。进入这个模式也很简单，主要有三种方式：")]),v._v(" "),s("h5",{attrs:{id:"_2-1-i-键进入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-i-键进入"}},[v._v("#")]),v._v(" 2.1 "),s("code",[v._v("i")]),v._v(" 键进入")]),v._v(" "),s("p",[s("strong",[s("code",[v._v("i")])]),v._v(" 表示 insert，即插入的意思，言简意赅。打开 Vim 编辑器并点击 i 键，这个时候编辑器左下角会出现 – INSERT – 字样，就这样表示进入插入模式了。")]),v._v(" "),s("h5",{attrs:{id:"_2-2-a-键进入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-a-键进入"}},[v._v("#")]),v._v(" 2.2 "),s("code",[v._v("a")]),v._v(" 键进入")]),v._v(" "),s("p",[s("strong",[s("code",[v._v("a")])]),v._v(" 表示 append 意思，打开编辑器后点击 a 键进入此模式。和 insert 不同的是，这个时候光标会移动到下一个字符，然后再进入插入模式。")]),v._v(" "),s("h5",{attrs:{id:"_2-3-o-键进入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-o-键进入"}},[v._v("#")]),v._v(" 2.3 "),s("code",[v._v("o")]),v._v(" 键进入")]),v._v(" "),s("p",[s("strong",[s("code",[v._v("o")])]),v._v(" 这个方式会在当前行下面新插入一行，并进入插入模式")]),v._v(" "),s("h5",{attrs:{id:"_2-4-大写字母方式进入插入模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-大写字母方式进入插入模式"}},[v._v("#")]),v._v(" 2.4 大写字母方式进入插入模式")]),v._v(" "),s("p",[v._v("这些命令还可以以大写字母方式进入插入模式，我们来看一下会有什么不一样的效果。")]),v._v(" "),s("ul",[s("li",[v._v("I 键：光标所在行首进行插入")]),v._v(" "),s("li",[v._v("A 键：光标所在行尾进行插入")]),v._v(" "),s("li",[v._v("O 键：光标所在行前新插入一空行进行插入")])]),v._v(" "),s("h4",{attrs:{id:"_3-可视化模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可视化模式"}},[v._v("#")]),v._v(" 3. 可视化模式")]),v._v(" "),s("p",[v._v("可视化模式主要用于对文本进行选择，类似于平时使用鼠标选中操作文本。我们可以选中相应文本，然后针对选中的文本指定操作：复制，替换等。")]),v._v(" "),s("p",[v._v("可视化模式主要有三种方式：")]),v._v(" "),s("ul",[s("li",[s("strong",[v._v("v")]),v._v("：字符级别可视化")]),v._v(" "),s("li",[s("strong",[v._v("V")]),v._v(": 行级别可视化")]),v._v(" "),s("li",[s("strong",[v._v("Ctrl-v")]),v._v(": 块级别可视化")])]),v._v(" "),s("p",[s("img",{attrs:{src:t(707),alt:"image-20230820221826465"}})]),v._v(" "),s("h4",{attrs:{id:"_4-命令行模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-命令行模式"}},[v._v("#")]),v._v(" 4. 命令行模式")]),v._v(" "),s("p",[v._v("顾名思义，命令行模式下的操作当然就是以命令为主，Vim 为我们提供了大量的丰富的命令，你可以把命令行模式当做是普通模式的加强版，它可以用来做到许多普通模式做不到的事情。")]),v._v(" "),s("p",[v._v("在普通模式下按下 "),s("code",[v._v(":")]),v._v(" ，这时你会看到窗口的左下角出现了一个 "),s("code",[v._v(":")]),v._v(" ，代表你已经进入命令行模式可以进行命令的输入，输入的命令会出现在 "),s("code",[v._v(":")]),v._v(" 的后面。下面我们演示下替换的命令操作：")]),v._v(" "),s("h6",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[v._v("#")]),v._v(" 注解")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("分解")]),v._v(" "),s("th",[v._v("作用")]),v._v(" "),s("th",[v._v("备注")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("：")]),v._v(" "),s("td",[v._v("进入命令行模式")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("%")]),v._v(" "),s("td",[v._v("意味所有行")]),v._v(" "),s("td",[v._v("也可以是指定行或者指定范围行")])]),v._v(" "),s("tr",[s("td",[v._v("s")]),v._v(" "),s("td",[v._v("替换意思")]),v._v(" "),s("td",[v._v("substitute")])]),v._v(" "),s("tr",[s("td",[v._v("/fmt")]),v._v(" "),s("td",[v._v("匹配的字符")]),v._v(" "),s("td",[v._v("这可以是个正则表达式")])]),v._v(" "),s("tr",[s("td",[v._v("/mmm/")]),v._v(" "),s("td",[v._v("需要替换的结果")]),v._v(" "),s("td")]),v._v(" "),s("tr",[s("td",[v._v("g")]),v._v(" "),s("td",[v._v("意思全局")]),v._v(" "),s("td",[v._v("和上面%有所区别，一个是匹配全局一个是替换全局")])])])]),v._v(" "),s("h2",{attrs:{id:"_8-vim-移动操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-vim-移动操作"}},[v._v("#")]),v._v(" 8. Vim 移动操作")]),v._v(" "),s("p",[v._v("在上一节 “Vim 的模式中” 我们知道了在 Vim 中如何移动光标。其实除了 h，l，j，k 键之外还有两种操作可以让我们移动光标：")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("键")]),v._v(" "),s("th",[v._v("含义")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("h")]),v._v(" "),s("td",[v._v("左移")])]),v._v(" "),s("tr",[s("td",[v._v("l")]),v._v(" "),s("td",[v._v("右移")])]),v._v(" "),s("tr",[s("td",[v._v("j")]),v._v(" "),s("td",[v._v("下移")])]),v._v(" "),s("tr",[s("td",[v._v("k")]),v._v(" "),s("td",[v._v("上移")])]),v._v(" "),s("tr",[s("td",[v._v("^/0")]),v._v(" "),s("td",[v._v("移动到行首")])]),v._v(" "),s("tr",[s("td",[v._v("$")]),v._v(" "),s("td",[v._v("移动到行尾")])])])]),v._v(" "),s("p",[s("img",{attrs:{src:"https://www.5axxw.com/images_oss/0b/9d124d1d-7cae-4a08-8eed-ada5f862d4ba.jpg?x-oss-process=style/logo",alt:"图片描述"}})]),v._v(" "),s("h4",{attrs:{id:"_4-vim-缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-vim-缩进"}},[v._v("#")]),v._v(" 4. Vim 缩进")]),v._v(" "),s("p",[v._v("每种语言开发中都会又缩进的硬性（Python）或者软性要求。一般来说通过 Vimrc 写到配置中，这样不必要每次手动缩进。但是有时候可能需要非常规的缩进。这时候就需要手动操作缩进了，可以针对单行或者多行甚至块。")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("快捷键")]),v._v(" "),s("th",[v._v("含义")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v(">> / :>")]),v._v(" "),s("td",[v._v("向右缩进")])]),v._v(" "),s("tr",[s("td",[v._v("m,n> / :m>(n-m+1)")]),v._v(" "),s("td",[v._v("m到n行缩进")])]),v._v(" "),s("tr",[s("td",[v._v("m>n")]),v._v(" "),s("td",[v._v("m行开始共n行缩进")])])])]),v._v(" "),s("h2",{attrs:{id:"_9-vim-删除、复制与粘贴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-vim-删除、复制与粘贴"}},[v._v("#")]),v._v(" "),s("strong",[v._v("9. Vim 删除、复制与粘贴")])]),v._v(" "),s("p",[v._v("Vim 中的删除、复制、粘贴于 Windows 下的还是有细微不同的，具体看下表：")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("Windows")]),v._v(" "),s("th",[v._v("vim")]),v._v(" "),s("th",[v._v("比较")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("cut")]),v._v(" "),s("td",[v._v("delete")]),v._v(" "),s("td",[v._v("vim delete 和windows 剪切差不多，不是真正的删除")])]),v._v(" "),s("tr",[s("td",[v._v("copy")]),v._v(" "),s("td",[v._v("yank")]),v._v(" "),s("td",[v._v("含义相同，只是为了避免c（change）冲突，改成了y（yank）")])]),v._v(" "),s("tr",[s("td",[v._v("paste")]),v._v(" "),s("td",[v._v("put")]),v._v(" "),s("td",[v._v("粘贴含义享同而且首字母都是p，方便记忆和操作")])])])]),v._v(" "),s("p",[v._v("Vim 中的删除、复制、粘贴于 Windows 下的还是有细微不同的，具体看下表：")]),v._v(" "),s("table",[s("thead",[s("tr",[s("th",[v._v("Windows")]),v._v(" "),s("th",[v._v("vim")]),v._v(" "),s("th",[v._v("比较")])])]),v._v(" "),s("tbody",[s("tr",[s("td",[v._v("cut")]),v._v(" "),s("td",[v._v("delete")]),v._v(" "),s("td",[v._v("vim delete 和windows 剪切差不多，不是真正的删除")])]),v._v(" "),s("tr",[s("td",[v._v("copy")]),v._v(" "),s("td",[v._v("yank")]),v._v(" "),s("td",[v._v("含义相同，只是为了避免c（change）冲突，改成了y（yank）")])]),v._v(" "),s("tr",[s("td",[v._v("paste")]),v._v(" "),s("td",[v._v("put")]),v._v(" "),s("td",[v._v("粘贴含义享同而且首字母都是p，方便记忆和操作")])])])]),v._v(" "),s("h2",{attrs:{id:"_10-vim-修改、查找与替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-vim-修改、查找与替换"}},[v._v("#")]),v._v(" "),s("strong",[v._v("10 . Vim 修改、查找与替换")])]),v._v(" "),s("p",[v._v("使用过 Word 的人应该很知道，在 Word 中我们使用 ctrl+f 来查找我们需要的内容。但是 Word 的查找功能比较单一，Vim 则提供了更加丰富的查找场景：")]),v._v(" "),s("ul",[s("li",[v._v("高亮查找")]),v._v(" "),s("li",[v._v("大小写敏感查找")]),v._v(" "),s("li",[v._v("重复查找")]),v._v(" "),s("li",[v._v("预览查找")])]),v._v(" "),s("h4",{attrs:{id:"_1-查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-查找"}},[v._v("#")]),v._v(" 1. 查找")]),v._v(" "),s("p",[v._v("使用查找功能我们需要进入普通模式，普通模式如何进入前面的小节已经讲了，这里不再过多赘述。下面我们来看下针对不同的如何执行查找操作：")]),v._v(" "),s("blockquote",[s("p",[s("strong",[v._v("Tips")]),v._v("：通模式下按下 "),s("code",[v._v(":")]),v._v(" ，这时你会看到窗口的左下角出现了一个 "),s("code",[v._v(":")]),v._v(" ，这时我们就可以输入我们要查找的内容了。")])]),v._v(" "),s("ul",[s("li",[s("strong",[v._v("开启高亮查找")]),v._v("：在左下角的 "),s("code",[v._v(":")]),v._v(" 后面输入 "),s("code",[v._v("set hls")]),v._v("，即可高亮显示查找内容。")]),v._v(" "),s("li",[s("strong",[v._v("开启预览查找")]),v._v("：在左下角的 "),s("code",[v._v(":")]),v._v(" 后面输入 "),s("code",[v._v("set incsearch")]),v._v("，这时 Vim 会根据输入内容提前预览匹配内容，并且实时更新")]),v._v(" "),s("li",[s("strong",[v._v("正向扫描")]),v._v("：在左下角的 "),s("code",[v._v(":")]),v._v(" 后面输入"),s("code",[v._v("/搜索内容")]),v._v("，开始从上向下搜索。")]),v._v(" "),s("li",[s("strong",[v._v("反向扫描")]),v._v("：在左下角的 "),s("code",[v._v(":")]),v._v(" 后面输入"),s("code",[v._v("?搜索内容")]),v._v("，开始从下向上搜索。")]),v._v(" "),s("li",[s("strong",[v._v("大小写敏感查找")]),v._v("：在左下角的 "),s("code",[v._v(":")]),v._v(" 后面输入"),s("code",[v._v("/搜索内容\\c")]),v._v("，查找的结果会大小写不敏感。")]),v._v(" "),s("li",[s("strong",[v._v("大小写不敏感查找")]),v._v("：在左下角的 "),s("code",[v._v(":")]),v._v(" 后面输入"),s("code",[v._v("/搜索内容\\C")]),v._v("，查找的结果会大小写敏感。")])]),v._v(" "),s("p",[s("strong",[v._v("查找小实战")])]),v._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[v._v("1. vim 中可用 :s 命令来替换字符串，具体如下：\n:s/str1/str2/ 替换当前行第一个 str1 为 str2\n:s/str1/str2/g 替换当前行中所有 str1 为 str2\n:m,ns/str1/str2/ 替换第 n 行开始到最后一行中每一行的第一个 str1 为 str2\n:m,ns/str1/str2/g 替换第 n 行开始到最后一行中所有的 str1 为 str2\n:1,$s/mpks/mpkss/g 将第一行到最后一行的mpks都替换成mpkss\n(注：m和n 为数字，若m为 .，表示为当前行开始；若n为$，则表示到最后一行结束)\n如果使用 # 作为分隔符，则中间出现的 / 不会作为分隔符，比如：\n:s#str1/#str2/# 替换当前行第一个 str1/ 为 str2/\n:%s+/oradata/apras/+/user01/apras1+ (使用+ 来 替换 / )： /oradata/apras/替换成/user01/apras1/\n2. 其他:%s/str1/str2/（等同于 :g/str1/s//str2/） 替换每一行的第一个 str1 为 str2\n:%s/str1/str2/g（等同于 :g/str1/s//str2/g 和 :1,$ s/str1/str2/g ） 替换文中所有 str1 为 str2\n从替换命令可以看到，g 放在命令末尾，表示对搜索字符串的每次出现进行替换；不加 g，表示只对搜索\n\n")])]),v._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[v._v("1")]),s("br"),s("span",{staticClass:"line-number"},[v._v("2")]),s("br"),s("span",{staticClass:"line-number"},[v._v("3")]),s("br"),s("span",{staticClass:"line-number"},[v._v("4")]),s("br"),s("span",{staticClass:"line-number"},[v._v("5")]),s("br"),s("span",{staticClass:"line-number"},[v._v("6")]),s("br"),s("span",{staticClass:"line-number"},[v._v("7")]),s("br"),s("span",{staticClass:"line-number"},[v._v("8")]),s("br"),s("span",{staticClass:"line-number"},[v._v("9")]),s("br"),s("span",{staticClass:"line-number"},[v._v("10")]),s("br"),s("span",{staticClass:"line-number"},[v._v("11")]),s("br"),s("span",{staticClass:"line-number"},[v._v("12")]),s("br"),s("span",{staticClass:"line-number"},[v._v("13")]),s("br"),s("span",{staticClass:"line-number"},[v._v("14")]),s("br")])])])}),[],!1,null,null,null);_.default=a.exports}}]);